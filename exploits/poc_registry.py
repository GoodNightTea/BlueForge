# exploits/poc_registry.py - PoC Registry and Base Class
from typing import Dict, Any, Callable, Awaitable, List

class PoCBase:
    name: str = "base"
    description: str = "Base PoC class"
    cve: str = ""
    author: str = ""
    severity: str = ""
    tags: List[str] = []

    async def run(self, context: Dict[str, Any]) -> Dict[str, Any]:
        raise NotImplementedError

class PoCRegistry:
    def __init__(self):
        self.pocs: Dict[str, PoCBase] = {}

    def register(self, poc: PoCBase):
        self.pocs[poc.name] = poc

    def get(self, name: str) -> PoCBase:
        return self.pocs[name]

    def all(self) -> List[PoCBase]:
        return list(self.pocs.values())
